// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  tel   String 
  name    String?
  photoURL String?
  additionalInfo String?
  bloodType BloodType?
  medicalConditions String?
  eventIds String[] @db.ObjectId
  events Event[] @relation(name: "attendees", fields: [eventIds], references:[id])
  adminEvents Event[] @relation(name: "admins", fields: [eventIds], references:[id])
  emergencies Emergency[]
  medicalExp Boolean?
}

model Event {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  description String
  location String
  userIds  String[] @db.ObjectId
  users    User[]    @relation(name: "attendees", fields: [userIds], references:[id])
  adminIds  String[] @db.ObjectId
  emergencies Emergency[]
  admins   User[]    @relation(name: "admins", fields: [adminIds], references:[id])
}

model Emergency {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  event Event @relation(fields: [eventId], references: [id])
  eventId String @db.ObjectId
  time DateTime
  type StatusType?
  isAddressed Boolean @default(false)
}

enum BloodType{
  OPOSITIVE
  ONEGATIVE
  APOSITIVE
  ANEGATIVE
  BPOSITIVE
  BNEGATIVE
  AB
  UNKNOWN
}

enum StatusType {
  EMERGENCY
  HELP
}
